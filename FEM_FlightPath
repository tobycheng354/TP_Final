#imports and setup
import numpy  as np
import matplotlib.pyplot as plt
import pandas as pd
import math
import random
import matplotlib as mpl
from matplotlib.legend_handler import HandlerTuple
import matplotlib.font_manager as font_manager
plt.style.use('default')
mpl.rcParams['font.family']='serif'
cmfont = font_manager.FontProperties(fname=mpl.get_data_path() + '/fonts/ttf/cmr10.ttf')
mpl.rcParams['font.serif']=cmfont.get_name()
mpl.rcParams['mathtext.fontset']='cm'
mpl.rcParams['axes.unicode_minus']=False
mpl.rcParams['axes.linewidth'] = 1

#data
data1 = pd.read_csv("~/Desktop/Technical Project/Data/ResultsAstro.csv") 
n1 = len(data1)
HVI1 = data1['HorizontalVelIn']
VVI1 = data1['VerticalVelIn']
SI1 = data1['SpinIn']
HVO1 = data1['HorizontalVelOut']
VVO1 = data1['VerticalVelOut']
SO1 = data1['SpinOut']

data2 = pd.read_csv("~/Desktop/Technical Project/Data/ResultsCourse.csv") 
n2 = len(data2)
HVI2 = data2['HorizontalVelIn']
VVI2 = data2['VerticalVelIn']
SI2 = data2['SpinIn']
HVO2 = data2['HorizontalVelOut']
VVO2 = data2['VerticalVelOut']
SO2 = data2['SpinOut']


#%%

i = 490
print(HVI2[i], VVI2[i], SI2[i])
print(HVO2[i], VVO2[i], SO2[i])



#%%
cmap = mpl.cm.get_cmap('viridis')
c1 = cmap(0)
c2 = cmap(0.25)
c3 = cmap(0.5)
c4 = cmap(0.75)
c5 = cmap(0.99)



def traj_r(ix, iy):
    sx = []
    sy = []
    time = np.linspace(0, 3, 10000)
    for t in time:
        sy.append((iy*t) + (0.5 * -9.81 * t * t))
        sx.append(ix*t)
        if sy[-1] < 0:
            break
    return sx, sy

idxs1 = random.sample(range(0, n1-1), 5) #random subset of 3
#idxs2 = random.sample(range(0, n2-1), 5) #random subset of 3
idxs2 = [200, 100, 300, 270, 291, 420]

c1traj1_x, c1traj1_y = traj_r(HVO1[idxs1[0]], VVO1[idxs1[0]])
c1traj2_x, c1traj2_y = traj_r(HVO1[idxs1[1]], VVO1[idxs1[1]])
c1traj3_x, c1traj3_y = traj_r(HVO1[idxs1[2]], VVO1[idxs1[2]])
c1traj4_x, c1traj4_y = traj_r(HVO1[idxs1[3]], VVO1[idxs1[3]])
c1traj5_x, c1traj5_y = traj_r(HVO1[idxs1[4]], VVO1[idxs1[4]])
'''
c1traj1_x_pred, c1traj1_y_pred = traj_r()
c1traj2_x_pred, c1traj2_y_pred = traj_r()
c1traj3_x_pred, c1traj3_y_pred = traj_r()
c1traj4_x_pred, c1traj4_y_pred = traj_r()
c1traj5_x_pred, c1traj5_y_pred = traj_r()
'''
c2traj1_x, c2traj1_y = traj_r(HVO2[idxs2[0]], VVO2[idxs2[0]])
c2traj2_x, c2traj2_y = traj_r(HVO2[idxs2[1]], VVO2[idxs2[1]])
c2traj3_x, c2traj3_y = traj_r(HVO2[idxs2[2]], VVO2[idxs2[2]])
c2traj4_x, c2traj4_y = traj_r(HVO2[idxs2[3]], VVO2[idxs2[3]])
c2traj5_x, c2traj5_y = traj_r(HVO2[idxs2[4]], VVO2[idxs2[4]])

c2traj1_x_pred, c2traj1_y_pred = traj_r(1.700694, 0.990395)
c2traj2_x_pred, c2traj2_y_pred = traj_r(9.87285, 1.8635)
c2traj3_x_pred, c2traj3_y_pred = traj_r(2.431055, 0.75125)
c2traj4_x_pred, c2traj4_y_pred = traj_r(3.124714, 0.800172)
c2traj5_x_pred, c2traj5_y_pred = traj_r(4.09144, 0.7900882)



fig, axs = plt.subplots(1,2,figsize=(15, 15))
line_width = 3
line_width_pred = 2
alpha_pred = 0.5
ls_pred = "--"
label_size = 20
tick_size = 15
axs[0].set_xlim(-1, 3)
axs[0].set_ylim(0, 4)
axs[0].plot(c1traj1_x, c1traj1_y, color = c1, lw = line_width, label = r'$|\omega_{out}-\hat{\omega}_{out}|$ = 100')
axs[0].plot(c1traj2_x, c1traj2_y, color = c2, lw = line_width, label = r'$|\omega_{out}-\hat{\omega}_{out}|$ = 100')
axs[0].plot(c1traj3_x, c1traj3_y, color = c3, lw = line_width, label = r'$|\omega_{out}-\hat{\omega}_{out}|$ = 100')
axs[0].plot(c1traj4_x, c1traj4_y, color = c4, lw = line_width, label = r'$|\omega_{out}-\hat{\omega}_{out}|$ = 100')
axs[0].plot(c1traj5_x, c1traj5_y, color = c5, lw = line_width, label = r'$|\omega_{out}-\hat{\omega}_{out}|$ = 100')
axs[0].legend(loc = "upper left")
axs[0].set_ylabel("Vertical Displacement "+r"$(m)$", fontsize = label_size)
axs[0].set_xlabel("Horizontal Displacement "+r"$(m)$", fontsize = label_size)
axs[0].set_xticks([-1, 0, 1, 2, 3])
axs[0].set_yticks([0, 1, 2, 3, 4])
axs[0].set_title("(a)", fontsize = label_size)
axs[0].tick_params(axis='both', which='major', labelsize=tick_size)
axs[0].set_box_aspect(1)
